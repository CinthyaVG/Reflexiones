What happens when you initialize a repository? Why do you need to do it?

 Se crea un archivo oculto en el cual se almacenarán los commits del directorio en el que iniciamos el repocitorio.
Es necesario ya que sin él no se pueden almacenar los commits de nuestros archivos que se encuentran en cierta 
carpeta.

How is the staging area different from the working directory and the repository? What value do you think it offers?

 Es diferente porque solo es un area temporal que se crea para almacenar por un lapso pequeño los archivos que se
desean almacenar más tarde como una versión del archivo que editamos. El working directory es en donde se almacenarían
los cambios de nuestros archivos y el repositorio donde se almacenan las versiones de los archivos. Es util porque
permite tener más control sobre lo que deseamos almacenar en nuestro repositorio.

How can you use the staging area to make sure you have one commit per logical change?

 Para checar si los archivos que son modificados tienen relación y si la última versión funciona óptimamente.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?
 
 Cuando quieres hacer una versión de tu archivo en otro idioma o cuando quieres hacer versiones con modificaciones
 experimentales pero no quieres perder tu versión original por si las modificaciones no funcionan y necesitas regresar
 a la versión anterior, o si te parece mejor la versión de otra rama, hacer modificaciones sobre esa version.

How do the diagrams help you visualize the branch structure?

 Te ayuda ya que puedes ver de manera más palpable la organización de los commits y las versiones y ver en qué
 ramas están almacenados y a partir de qué versiones fueron creados.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

 Se combinan los contenidos de los últimos commits de cada branch en uno solo y se genera un commit nuevo con 
 caracteristicas de ambos.

What are the pros and cons of Git’s automatic merging vs. always doing merges manually?

 Un pro es que lo hace de manera rápida  y un contra es que no puede corregir las complicaciones que se encuentre en las
 versiones porque alguien manualmente tiene que decidir qué conservar o quitar.